package org.leanpoker.player.domain;import org.leanpoker.player.domain.model.Card;import java.util.ArrayList;import java.util.List;public class PostFlopBiddingStrategy {    private final CardScorer scorer;    public PostFlopBiddingStrategy(CardScorer scorer) {        this.scorer = scorer;    }    public int decideBid(List<Card> cards, List<Card> communityCards, int ourMoney, int buyIn) {        var allCards = new ArrayList<>(cards);        allCards.addAll(communityCards);        int pairCount = scorer.countPairs(cards, communityCards);        if (pairCount == 1) {            return Math.min(buyIn * 3, ourMoney);        } else if (pairCount == 2) {            return ourMoney;        }        int overallScore = scorer.overallScore(cards);        if (overallScore >= 12) {            return ourMoney;        } if (overallScore > 10) {            return Math.max(buyIn, 10);        } else {            return 0;        }    }}